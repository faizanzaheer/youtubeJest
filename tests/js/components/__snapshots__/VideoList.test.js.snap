// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VideoList
    error={null}
    isLoading={false}
    selectVideo={[MockFunction]}
    videoList={
      Array [
        Object {
          "id": Object {
            "videoId": 1,
          },
        },
        Object {
          "id": Object {
            "videoId": 2,
          },
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <VideoListEntry
          handleSelectedVideo={[MockFunction]}
          video={
            Object {
              "id": Object {
                "videoId": 1,
              },
            }
          }
        />,
        <VideoListEntry
          handleSelectedVideo={[MockFunction]}
          video={
            Object {
              "id": Object {
                "videoId": 2,
              },
            }
          }
        />,
      ],
      "className": "videoList",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "0",
        "nodeType": "function",
        "props": Object {
          "handleSelectedVideo": [MockFunction],
          "video": Object {
            "id": Object {
              "videoId": 1,
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "function",
        "props": Object {
          "handleSelectedVideo": [MockFunction],
          "video": Object {
            "id": Object {
              "videoId": 2,
            },
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <VideoListEntry
            handleSelectedVideo={[MockFunction]}
            video={
              Object {
                "id": Object {
                  "videoId": 1,
                },
              }
            }
          />,
          <VideoListEntry
            handleSelectedVideo={[MockFunction]}
            video={
              Object {
                "id": Object {
                  "videoId": 2,
                },
              }
            }
          />,
        ],
        "className": "videoList",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "function",
          "props": Object {
            "handleSelectedVideo": [MockFunction],
            "video": Object {
              "id": Object {
                "videoId": 1,
              },
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "function",
          "props": Object {
            "handleSelectedVideo": [MockFunction],
            "video": Object {
              "id": Object {
                "videoId": 2,
              },
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Testing VideoList.... renders the loading message 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <VideoList
    error={
      Object {
        "message": "Error while loading Videos",
      }
    }
    isLoading={false}
    selectVideo={[MockFunction]}
    videoList={
      Array [
        Object {
          "id": Object {
            "videoId": 1,
          },
        },
        Object {
          "id": Object {
            "videoId": 2,
          },
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div>
        Error while loading Videos
      </div>,
      "className": "videoList",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Error while loading Videos",
      },
      "ref": null,
      "rendered": "Error while loading Videos",
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div>
          Error while loading Videos
        </div>,
        "className": "videoList",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Error while loading Videos",
        },
        "ref": null,
        "rendered": "Error while loading Videos",
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
